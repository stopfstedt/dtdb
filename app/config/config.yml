imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: %locale% }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        assets_version: v2.8
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:
        cookie_lifetime: 3000000
    fragments:       ~

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
    globals:
        texts: "@texts"

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        unix_socket: /Applications/MAMP/tmp/mysql/mysql.sock
        charset:  UTF8
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: %kernel.root_dir%/data/data.db3
        # path:     %database_path%

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                auto_mapping: true
                dql:
                    string_functions:
                        replace: Dtdb\CardsBundle\DQL\ReplaceFunction
                        binary: Dtdb\CardsBundle\DQL\BinaryFunction

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    port:      %mailer_port%
    encryption: %mailer_encryption%
    spool:     { type: memory }

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: Dtdb\BuilderBundle\Entity\User
    from_email:
        address:        admin@dtdb.co
        sender_name:    DoomtownDB
    registration:
        confirmation:
            enabled:    true # change to true for required email confirmation
            template:   FOSUserBundle:Registration:email.txt.twig
    resetting:
        token_ttl: 86400
        email:
            template:   FOSUserBundle:Resetting:email.txt.twig

fos_oauth_server:
    db_driver: orm
    client_class:        Dtdb\BuilderBundle\Entity\Client
    access_token_class:  Dtdb\BuilderBundle\Entity\AccessToken
    refresh_token_class: Dtdb\BuilderBundle\Entity\RefreshToken
    auth_code_class:     Dtdb\BuilderBundle\Entity\AuthCode
    service:
        user_provider: fos_user.user_provider.username
        options:
            refresh_token_lifetime: 5184000
#            supported_scopes: user

# FOSJsRoutingBundle Configuration
fos_js_routing:
    routes_to_expose: [ '.*' ]

# DoctrineExtensions Configuration
stof_doctrine_extensions:
    orm:
        default:
            timestampable: true
